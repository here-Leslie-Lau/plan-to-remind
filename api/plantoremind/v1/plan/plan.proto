syntax = "proto3";

package api.plantoremind.v1.plan;

//import "google/protobuf/timestamp.proto";
import "validate/validate.proto";
import "google/protobuf/empty.proto";
import "google/api/annotations.proto";

option go_package = "plan-to-remind/api/plantoremind/v1/plan;plan";

service Plan {
  rpc CreatePlan (CreatePlanRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      post: "/api/v1/plan/create"
      body: "*"
    };
  };
  rpc UpdatePlan (UpdatePlanRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      post: "/api/v1/plan/update"
      body: "*"
    };
  };
  rpc DeletePlan (DeletePlanRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      post: "/api/v1/plan/delete"
      body: "*"
    };
  };
  rpc GetPlan (GetPlanRequest) returns (GetPlanReply) {
    option (google.api.http) = {
      post: "/api/v1/plan/get"
      body: "*"
    };
  };
  rpc ListPlan (ListPlanRequest) returns (ListPlanReply) {
    option (google.api.http) = {
      post: "/api/v1/plan/list"
      body: "*"
    };
  };
}

message CreatePlanRequest {
  // 计划开关状态
  uint32 state = 1 [(validate.rules).uint32 = {in: [1, 2]}];
  // 计划等级
  uint32 level = 2 [(validate.rules).uint32 = {gte: 1, lte: 8}];
  // 计划时间表ID
  uint64 cron_id = 3;
  // 失效时间 example:(2006-01-02 15::04:05)
  string dead_time = 4 [(validate.rules).string.min_len = 1];
  string name = 5 [(validate.rules).string.min_len = 1];
}

message UpdatePlanRequest {
  uint64 id = 1 [(validate.rules).uint64.gt = 0];
  // 状态
  uint32 state = 2;
  // 等级
  uint32 level = 3;
  // 计划时间表ID
  uint64 cron_id = 4;
  // 计划失效时间 format:2006-01-02
  string dead_time = 5;
  // 计划名称
  string name = 6;
}

message DeletePlanRequest {
  uint64 id = 1 [(validate.rules).uint64.gt = 0];
}

message PlanData {
  uint64 id = 1;
  // 状态
  uint32 state = 2;
  // 等级
  uint32 level = 3;
  // 计划时间表ID
  uint64 cron_id = 4;
  // 计划失效时间
  int64 dead_time = 5;
  // 计划名称
  string name = 6;
  // 计划时间表描述
  string cron_desc = 7;
}

message GetPlanRequest {
  uint64 id = 1 [(validate.rules).uint64.gt = 0];
}
message GetPlanReply {
  PlanData plan = 1;
}

message ListPlanRequest {
  // 偏移量
  int64 offset = 1;
  // 每页多少条
  int64 limit = 2;
  // 排序
  string order_by = 3;
  // 计划失效范围查询
  string dead_time_begin = 4;
  string dead_time_end = 5;
}
message ListPlanReply {
  repeated PlanData list = 1;
}